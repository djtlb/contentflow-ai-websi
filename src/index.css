@import 'tailwindcss';
@import "tw-animate-css";

@layer base {
  * {
    @apply border-border;
  }
}

:root {
  /* Base colors that define the core visual identity */
  --background: oklch(0.98 0.002 264);
  --foreground: oklch(0.15 0.02 264);

  --card: oklch(1 0 0);
  --card-foreground: oklch(0.15 0.02 264);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.15 0.02 264);

  /* Action colors that represent interactive elements */
  --primary: oklch(0.35 0.15 264); /* Deep blue */
  --primary-foreground: oklch(0.98 0.002 264);
  --secondary: oklch(0.92 0.015 264); /* Light blue-gray */
  --secondary-foreground: oklch(0.15 0.02 264);
  --accent: oklch(0.65 0.15 194); /* Vibrant cyan */
  --accent-foreground: oklch(0.98 0.002 264);
  --destructive: oklch(0.55 0.2 25);
  --destructive-foreground: oklch(0.98 0.002 264);

  /* Supporting UI colors for various states and elements */
  --muted: oklch(0.95 0.01 264);
  --muted-foreground: oklch(0.45 0.02 264);
  --border: oklch(0.88 0.01 264);
  --input: oklch(0.88 0.01 264);
  --ring: oklch(0.35 0.15 264);

  /* Border radius for consistent shape language */
  --radius: 0.75rem;
}

/* Map the CSS variables to Tailwind's theme system */
@theme {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);

  /* Map radius variables to create a consistent rounding system */
  --radius-sm: calc(var(--radius) * 0.5);
  --radius-md: var(--radius);
  --radius-lg: calc(var(--radius) * 1.5);
  --radius-xl: calc(var(--radius) * 2);
  --radius-2xl: calc(var(--radius) * 3);
  --radius-full: 9999px;

  /* Font family mapping */
  --font-family-sans: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
}

body {
  font-family: var(--font-family-sans);
}